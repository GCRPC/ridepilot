:css
  .latlng_fields, .address_fields, .address_search {
    width: 100% !important;
    max-width: 100% !important;
  }
  
- defined?(prefix) ? prefix : prefix = "address"
- defined?(edit_mode) ? edit_mode : edit_mode = :new
= hidden_field_tag :lat, address.latitude, class: 'address_lat'
= hidden_field_tag :lon, address.longitude, class: 'address_lon'
- name_label = prefix == "customer" ? translate_helper("address_code") : translate_helper("address_name") 
%li.form-group
  .form-label
    = form.label :name, name_label
  .form-field
    = form.text_field :name, maxlength: 30, class: 'form-control'
%li.form-group
  .form-label
    = label_tag "#{prefix}_non_street_mailing_address", translate_helper("non_street_mailing_address")
  .form-field
    = check_box_tag "#{prefix}_non_street_mailing_address", 'yes', false, class: 'address_non_street_mailing_address'
%li.form-group.full_address
  .form-label
    = label_tag "#{prefix}_full_address", translate_helper("full_address_name")
  .form-field
    - if edit_mode == :edit
      = address.try(:address_text)
    - else
      .form-inline.address_container
        - is_latlng_coded = address.try(:coded_by_lat_lng?)
        - is_latlng = is_latlng_coded || !params[:address_lat].blank? || !params[:address_lon].blank?
        .latlng_fields{style: is_latlng ? "" : 'display: none;'}
          = number_field_tag "address_lat", (is_latlng_coded && address.try(:latitude)) || params[:address_lat], placeholder: "latitude", min: -90, max: 90, style: 'width: 40%;'
          = number_field_tag "address_lon", (is_latlng_coded && address.try(:longitude)) || params[:address_lon], placeholder: "longitude", min: -180, max: 180, style: 'width: 40%;'
        .address_fields{style: is_latlng ? 'display: none;' : ""}
          = text_field_tag "#{prefix}_full_address", is_latlng_coded ? nil : address.try(:address_text), class: 'address_search form-control', style: 'width: 100%;'
        %label
          %input.latlng_address_switch{type: 'checkbox', checked: ("true" if is_latlng)}
          Lat/Lon
.selfclear.non_geocoding_address{:style => "display: none;"}
  %li.form-group
    .form-label
      = form.label :address, translate_helper("address")
    .form-field
      = form.text_field :address, class: 'address_text form-control'
  %li.form-group
    .form-label
      = form.label :city, translate_helper("city")
    .form-field
      = form.text_field :city , class: 'address_city form-control'
  %li.form-group
    .form-label
      = form.label :state, translate_helper("state")
    .form-field
      = form.text_field :state, :size=>2, :maxlength=> 2, :class => 'address_state form-control', :data => {:convert => 'uppercase'}
  %li.form-group
    .form-label
      = form.label :zip, translate_helper("zip")
    .form-field
      = form.text_field :zip, class: 'address_zip form-control'
%li.form-group
  .form-label
    = form.label :phone_number, translate_helper("phone_number")
  .form-field
    = form.text_field :phone_number, class: 'form-control'
%li.form-group
  .form-label
    = form.label :default_trip_purpose, translate_helper("default_trip_purpose")
  .form-field
    = form.select :trip_purpose_id, TripPurpose.by_provider(current_provider).map { |tp| [tp.name, tp.id] }, :include_blank => true, class: 'form-control'
%li.form-group
  .form-label
    = form.label :in_district, translate_helper("in_district")
  .form-field
    = form.select :in_district, [[translate_helper("unspecified"),nil], [translate_helper("yes"), true], [translate_helper("no"), false]], class: 'form-control'
%li.form-group
  .form-label
    = form.label :notes, translate_helper("address_notes")
  .form-field
    = form.text_area :notes, class: 'form-control'

= render 'addresses/google_place_autocomplete_js' if prefix != 'pickup'
= render 'addresses/latlng_address_switch_js'

:javascript
  $(function() {
    // Force uppercase text
    $('[data-convert="uppercase"]').keyup(function(evt) {
      convert_uppercase(this);
    });
    
    $('.address_non_street_mailing_address').change(function() {
      if(!$(this).prop('checked')) {
        $('.non_geocoding_address').hide();
        $('.full_address').show();

      } else {
        $('.full_address').hide();
        $('.non_geocoding_address').show();
      }

      $('.non_geocoding_address input').val('');
      $('.full_address input').val();
    });


    $('input[name=address_lat], input[name=address_lon]').on('input', function() {
      $('.address_search').val('');
      $('.address_search').change();
    });

    $('.address_search').on('input', function() {
      $('input[name=address_lat]').val('');
      $('input[name=address_lon]').val('');
    });
  });
