<div id="page-header">
  <h1>Dispatcher</h1>
</div>

<div id="tree">
  Tree
</div>

<div id="map-container">
  
</div>

<style type="text/css" media="screen">

  .dispatch #main {
    padding: 10px 1% 10px 1%;
    margin-bottom: 10px;
  }

  #tree {
    width: 20%;
    margin: 0 1% 0 0;
    float : left;
  }
  
  #map-container {
    width : 79%;
    min-height : 300px;
  }
  
  span.color {
    display : inline-block;
    width : 12px;
    height : 12px;
    border-radius : 6px;
    vertical-align : middle;
    border: 1px solid black;
  }
</style>

<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<%= javascript_include_tag "styledmarker.js" %>
<%= javascript_include_tag "jquery.jstree.js" %>
<%= stylesheet_link_tag "jstree-apple/style.css" %>

<script type="text/javascript" charset="utf-8">
  function Dispatcher (tree_id, map_id) {
    _d             = this,
    this.tree      = null,
    this.map       = null,
    this.markers   = {},
    this._data     = null, 
    this._tree_elem  = $("#" + tree_id),
    this._map_elem = $("#" + map_id),
    
    this.init = function(map_id){
      $(window).resize(_d.adjustMapHeight).resize();

      _d.map = new google.maps.Map( document.getElementById(map_id), {
        zoom      : 11,
        mapTypeId : google.maps.MapTypeId.ROADMAP, 
        center    : new google.maps.LatLng(45.5234515, -122.6762071)
      });
    },
    
    this.adjustMapHeight = function() {
      _d._map_elem.css("height", function(){
        return $(window).height() -
        $("#header").outerHeight() -
        $("#crossbar").outerHeight() -
        ( $("#main").outerHeight() - $("#main").height() ) -
        $("#page-header").outerHeight() - 21 + "px"
      });
    },

    this.setData = function(data){
      _d._data = data;
      
      _d.initTree();
      _d.initMarkers();
      _d.createNodeListeners();
    },
    
    this.initTree = function(){
      _d.tree = _d._tree_elem.jstree({
        core      : { html_titles : true },
        plugins   : [ "json_data", "themes", "checkbox" ],
        themes    : { theme : "apple" },
        json_data : { data : tree }
      });
      
      // this isnt working without a delay ?
      window.setTimeout(function(){
        _d._tree_elem.jstree("open_all", -1);
        _d._tree_elem.jstree("check_all");
      }, 1);
    },
    
    this.initMarkers = function(){
      $.each(_d._data, function(){
        var provider = this;
        $.each(provider.children, function(){
          var device_pool = this;
          $.each(device_pool.children, function(){
            var device = this;
            var marker = new StyledMarker({
              styleIcon : new StyledIcon( StyledIconTypes.MARKER, { color : device_pool.attr["data-color"] } ),
              position  : new google.maps.LatLng( device.metadata.lat, device.metadata.lng ),
              map       : _d.map
            });
            _d.markers[device.metadata.id] = marker;
          })
        })
      });
    }, 
    
    this.uncheckNode = function(node){
      _d._tree_elem.jstree("uncheck_node", node );
    },
    
    this.checkNode = function(node){
      _d._tree_elem.jstree("check_node", node );
    },
    
    this.createNodeListeners = function(){
      _d._tree_elem.delegate("a","click", function(e) { 
        if ( _d._tree_elem.jstree("is_checked", this) )
          _d.uncheckNode(this);
        else 
          _d.checkNode(this);
        
        // TODO this should be handled with an event listener for checked and unchecked,
        //      right now only clicking the titles toggle visibility
        var node = $(this).parent("li"); 
        if (node.data().lat) // it's a marker
          return _d.toggleVisibility( [_d.markers[node.data().id.toString()]] );
        else {
          $.each( node.find("[rel=device]"), function(){
            return _d.toggleVisibility( [_d.markers[$(this).data().id.toString()]] );
          });
        }
      });
    },
    
    this.toggleVisibility = function(markers){
      $.each(markers, function(){
        var marker = this;
        if (!marker.getMap()) marker.setMap(_d.map);
        else marker.setMap(null);
      })
    };
    
    this.init(map_id);
  }
  
  var d = new Dispatcher("tree", "map-container");
  
  var tree = [{ // weird format required by jstree
    data : "Ride Connection",
    metadata : { id : 1 },
    attr : { rel : "provider" },
    children : [ // device_pools
      {
        data : "Device Pool 1 <span class='color' style='background-color:#ccc'> </span>", // do device pools have names ?
        metadata : { id : 1},
        attr : { rel : "device_pool", "data-color" : "ccc" },
        children : [ // devices
          {
          	data   : "Device 1",
          	attr : { rel : "device" },
            metadata : { id : 1, lat : 45.520300607576864, lng : -122.72346496582031, status : 'break' }
          }
        ]
      },
      {
        data : "Device Pool 2 <span class='color' style='background-color:#FFC'> </span>",
        attr : { rel : "device_pool", "data-color" : "FFC" },
        metadata : { id : 2 },
        children : [
          {
            data : "Device 2",
            attr : { rel : "device" },
            metadata : { id : 2,  lat : 45.51945867165255, lng : -122.65480041503906, status : 'active' }
          }
        ]
      }
    ]
  }, {
    data : "Someone Else",
    attr : { rel : "provider" },
    metadata : { id : 2 },
    children : [ // device pools
      {
        data : "Device Pool 3 <span class='color' style='background-color:#0D4680'> </span>",
        attr : { rel : "device_pool",  "data-color" : "0D4680" },
        metadata : { id: 3},
        children : [ // devices
          {
            data : "Device 3",
            attr : { rel : "device" },
            metadata : { id : 3, lat : 45.54447082163623,  lng : -122.66055107116699, status : 'inactive' }  
          },
          {
          	data : "Device 4",
          	attr : { rel : "device" },
            metadata : { id : 4, lat : 45.540683638652524, lng : -122.69479751586914, status : 'active' }
        	}
        ]
      }
    ]
  }];
  
  d.setData(tree);
</script>