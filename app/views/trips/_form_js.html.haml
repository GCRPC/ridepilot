= render 'shared/hide_invisible_form_fields_js', model_name: "trip", table_name: 'trips', provider_id:  current_provider.try(:id)

- if @trip.run && !@trip.new_record?
  :javascript
    function check_run_disruption(callback) {
      console.log('checking...');
      var attrs = [];

      if($('#trip_customer_id').val() != "#{@trip.customer_id}") {
        attrs.push('customer');
      }

      var original_date = moment("#{@trip.date.to_s}");
      var new_date = moment($('#trip_date').val());
      
      if(new_date - original_date != 0) {
        attrs.push('date');
      }

      var today_str = moment(new Date()).format('YYYY-MM-DD');
      var original_pickup_time = moment(today_str + " #{@trip.pickup_time.try(:to_s, :time_only)}", "YYYY-MM-DD HH:mm A");
      var new_pickup_time = moment(today_str + " " +$('#trip_pickup_time').val(), "YYYY-MM-DD HH:mm A");
      if(new_pickup_time - original_pickup_time != 0) {
        attrs.push('pickup time');
      }

      var original_appointment_time = moment(today_str + " #{@trip.appointment_time.try(:to_s, :time_only)}", "YYYY-MM-DD HH:mm A");
      var new_appointment_time = moment(today_str + " " + $('#trip_appointment_time').val(), "YYYY-MM-DD HH:mm A");
      if(new_appointment_time - original_appointment_time != 0) {
        attrs.push('appointment time');
      }
      if($('#trip_pickup_address_id').val() != "#{@trip.pickup_address_id}") {
        attrs.push('pickup address');
      }
      if($('#trip_dropoff_address_id').val() != "#{@trip.dropoff_address_id}") {
        attrs.push('dropoff address');
      }

      if(attrs.length == 0) {
        if(callback) {
          callback();
        }
      } else {
        bootbox.confirm("<b>Changes in following fields (<span style='color: red;'>" + attrs.join(', ') + "</span>) are likely to disrupt the run and the trip would be unscheduled. Are you sure to continue?</b>", function(result) {
          if(result) {
            if(callback) {
              callback();
            }
          }
        });
      }
    }

- if @trip.is_return? 
  - if @trip.run && !@trip.new_record?
    :javascript
      $(function() {
        $('.trip_form').submit(function(e) {
          var form = this;
          e.preventDefault();
          var callback = function() {
            handle_client_code_verification($('#trip_customer_id').val(), form);
          };
          // first check run disruption warning
          if(typeof check_run_disruption != 'undefined') {
            check_run_disruption(callback);
          } else {
            callback();
          }
        });
      });
  - else
    :javascript
      $(function() {
        $('.trip_form').submit(function(e) {
          var form = this;
          e.preventDefault();
          handle_client_code_verification($('#trip_customer_id').val(), form);
        });
      });
- else
  = render partial: 'trips/double_booked_trip_dialog'
  :javascript
    $(document).ready(function(){

      var doubleBookedTripRowHtml = "#{escape_javascript(render partial: 'double_booked_trip_row')}"
      var dbh = new DoubleBookedTripsHelper({
        tableRowHtml: doubleBookedTripRowHtml,
        url: "#{check_double_booked_trips_path}",
        form: $('form.trip_form'),
        modal: $('#doubleBookedTripDialog'),
        table: $('#doubleBookedTripDialog #double-booked-trips-table')
      });

      // On form submit, check for potential double-booking before submitting form
      dbh.form.submit(function(e) {
        var form = this;
        e.preventDefault();
        var callback = function() {
          var requestBody = dbh.requestBodyFromForm(#{@trip_id || 'null'});

          dbh.checkDoubleBooked(requestBody, function(data) {
            // If double booking exists, alert user and let them cancel or continue
            if(data.trips.length > 0) {
              dbh.populateTable(data.trips);
              dbh.showModal();
              // If modal submit button is clicked, submit form.
              dbh.modal.find('.submit-double-book-modal').click(function() {
                handle_client_code_verification($('#trip_customer_id').val(), form);
              });
            // Else, submit form
            } else {
              handle_client_code_verification($('#trip_customer_id').val(), form);
            }
          });
        }

        // first check run disruption warning
        if(typeof check_run_disruption != 'undefined') {
          check_run_disruption(callback);
        } else {
          callback();
        }
        
      });
    });