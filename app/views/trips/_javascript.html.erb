<%= render "shared/date_picker_javascript" %>
<script type='text/javascript'>

  function autocompleted(address, field) {
    if (address.label == "New Address") {
      $( "#" + field + "-address-form" ).dialog( "open" );
    } else if (address.id) {
      //found an existing address
        id_field = '#trip_' + field + '_address_id';
      $(id_field).val(address.id);
      label_field = '#' + field + '_address_label';
      $(label_field).val(address.label);
      //close dialog
      $( "#" + field + "-address-form" ).dialog( "close" );
    } else {
      //found a geocode, fill in fields, open the dialog for saving
      $('#' + field + '_name').val(address.name);
      $('#' + field + '_building_name').val(address.building_name);
      $('#' + field + '_address').val(address.address);
      $('#' + field + '_city').val(address.city);
      $('#' + field + '_state').val(address.state);
      $('#' + field + '_zip').val(address.zip);
      $('#' + field + '_lat').val(address.lat);
      $('#' + field + '_lon').val(address.lon);
      $('#' + field + '_in_district').val(address.in_district);
      $( "#" + field + "-address-form" ).dialog( "open" );
    }
  }

  $(function() {
    
    function load_index_trips(start_time) {
      $("form.edit_trip").remove();
      $("form.new_trip").remove();
      $("table.trips").show();
      $('a.new').show(); 
      $('a.new').prev("hr").show();
      if (start_time) $("#calendar").weekCalendar("gotoWeek", start_time);
      $("#page-header h1").html("View Trips");
    }

    function load_edit_trip(form) {
      $("form.new_trip").remove();
      $("form.edit_trip").remove();
      $('table.trips').after(form).hide();    
      $('a.new').hide(); 
      $('a.new').prev("hr").hide();
      makeDialogs();
      makeDatePickers();

      $("#page-header h1").html("Edit Trip");
    }
    
    function push_index_state() {
      if (supports_history_api()) history.pushState({index: calendar_range, scroll_positions: scroll_positions}, "list trips", "<%= trips_path %>?" + $.param(calendar_range));
    }
    
    function replace_index_state() {
      if (supports_history_api()) history.replaceState({index: calendar_range, scroll_positions: scroll_positions}, "list trips", "<%= trips_path %>?" + $.param(calendar_range));
    }
    
    function push_edit_state(path) {
      if (supports_history_api()) history.pushState({edit: path}, "edit trip", path);
    }
    
    function on_trip_index() {
      return ($("form.edit_trip, form.new_trip").length == 0);
    }

    window.onpopstate = function(event) {
      if (event.state) {
        scroll_positions = event.state['scroll_positions'];
        if (event.state['index']) load_index_trips(event.state['index'].start * 1000);
        if (event.state.edit) $.get(event.state.edit, function(data){ load_edit_trip(data.form) }, "json");
      }
    };
    
    // happens after you submit an address (not autocomplete)
    // an id should be returned, and then the form should close.
    // if no id is returned, error messages are filled in. 
    $('.address-search').live('ajax:success', function(evt, data, status, xhr){
      if (data.id) {
        $( $(this).attr('data-id-element') ).val(data.id);
        $( $(this).attr('data-label-element') ).val(data.label);
        
        if (data.phone_number) $("#dropoff_phone").val(data.phone_number);
        if (data.trip_purpose) $("#trip_trip_purpose").val(data.trip_purpose);
        
        $( $(this)[0].parentNode ).dialog( "close" );
      } else {
        //failed to create an address
        for (var field in data) {
          text_field = $('#' + data.prefix + "_" + field);
          error_element = text_field.attr('data-error-element');
          if (!error_element) {
            error_element_id = data.prefix + "_" + field
            text_field.after('<span class="error" id="' + error_element_id + '">' + data[field] + "</span>");
            error_element = "#" + error_element_id;
            text_field.attr('data-error-element', error_element);
          }
          $(error_element).innerHtml = data[field]
        }
      }
    })
    
    var calendar_range, scroll_positions;

    $('#calendar').weekCalendar({
        date: <%= @start && @start > 0 ? @start * 1000 : "new Date()" %>,
        timeslotsPerHour: 4,
        daysToShow: getDaysToShow(),
        startOnFirstDayOfWeek: true,
        firstDayOfWeek: getFirstDayOfWeek,
        businessHours: {
          start: RidePilot.business_hours.start,
          end: RidePilot.business_hours.end,
          limitDisplay: true},
        allowCalEventOverlap: true,
        overlapEventsSeparate: true,
        headerSeparator: ", ",
        timeslotHeight: 15,
        calendarBeforeLoad: function($calendar){
          // Add the calendar expander & vehicle filter
          $("#vehicle_filter").remove().appendTo("div.wc-toolbar").show();
          $("#expand_calendar").remove().appendTo("div.wc-toolbar").show();
        },
        height: function($calendar){
          if ( $("#calendar")[0].$expanded )
            return ($(".wc-hour-header").eq(0).height() + 8) * 11 - 7;
          else
            return ($(window).height() * 0.3 + 40);
        },
        timeFormat: "h:ia",
        textSize: 10,
        defaultEventLength: 3,
        readonly: true,
        eventRender : function(calEvent, $event) {
            if(calEvent.end.getTime() < new Date().getTime()) {
                $event.css({ opacity: 0.33 });
            }
        },
        eventClick: function(calEvent, element) {
          var path = "<%= edit_trip_path 'CHANGE_ME' %>".replace(/CHANGE_ME/, calEvent['id']);
          $.get(path, function(data){
            push_edit_state(path);
            load_edit_trip(data.form);
          }, "json");
        },
        data: function(start, end, callback){
          $("#vehicle_filter #vehicle_id").val("");
          calendar_range = { start:start.getTime()/1000, end:end.getTime()/1000 };
          
          $.getJSON('<%= trips_path :json %>',
            calendar_range,
            function(data, textStatus, jqXHR){  
              
              // we probably didn't have the right range before, so now  we should update the state
              if ( on_trip_index() ) replace_index_state();
                          
              callback(data.events);              

              var table = $("#calendar").next("table");
              table.find("tr.trip").remove();
              table.find("tr.day").remove();
              $.each(data.rows, function(i, row){
                table.append(row);
              })
              $("tr:odd").addClass("odd");
              
              if (scroll_positions) window.scrollTo(scroll_positions.scrollX, scroll_positions.scrollY);
              scroll_positions = null;
            }
          );
        },
        eventHeader: function(calEvent, calendar) {
          var options = calendar.weekCalendar('option');
          var one_hour = 3600000;
          var displayTitleWithTime = calEvent.end.getTime() - calEvent.start.getTime() <= (one_hour / options.timeslotsPerHour);
          if (displayTitleWithTime) {
            return calendar.weekCalendar(
                        'formatDate', calEvent.start, options.timeFormat) +
                        ': ' + calEvent.title;
          } else {
            return calendar.weekCalendar(
                        'formatDate', calEvent.start, options.timeFormat);
          }
        }
    });
    
    $("#calendar .wc-nav button").bind("click", function(e){
      if ( on_trip_index() ) push_index_state(); 
    });

    <% if @trip.present? && @trip.pickup_time.present? %>
      $("#calendar").weekCalendar("gotoWeek", ISODateFormatToDateObject($("#trip_pickup_time").val()));
    <% end %>

    // address dialog functionality
    // via http://jqueryui.com/demos/dialog/#modal-form 
    function makeDialogs() {
      $( ".address-form" ).dialog({
          autoOpen: false,
          height: 395,
          width: 600,
          modal: true,
          buttons: {
              "Add Address": function() {
                  form = $( this )[0].children[0];
                  $(form).trigger('submit'); 
              },
              Cancel: function() {
                var prefix = $(this).attr("id").replace(/\-address\-form/, "");
                var field  = $( "#" + prefix + "_search_address" );
                field.val( field.attr("data-original-value") );
                $("#trip_" + prefix + "_address_id").val(field.attr("data-original-id"));
                $( this ).dialog( "close" );
              }
          },
          close: function() {
          }
      });
    };
    
    makeDialogs();

    $("#expand_calendar button").live("click", function(e){
      var cal       = $("#calendar")[0];
      cal.$expanded = !cal.$expanded; // toggle expanded state

      // toggle class on expander button
      $(this).find(".ui-icon").
        toggleClass("ui-icon-arrowthickstop-1-s").
        toggleClass("ui-icon-arrowthickstop-1-n");

      $(this).attr("title", cal.$expanded ? "Shrink" : "Expand" );

      // Trigger window resize so calendar is resized properly
      $(window).trigger("resize");
    });

    $('#pickup_search_address').live('railsAutocomplete.select', function(e, selected){
      autocompleted(selected, 'pickup');
    });
    
    $('#dropoff_search_address').live('railsAutocomplete.select', function(e, selected){
      autocompleted(selected, 'dropoff');
    });
    
    $('tr.trip a[data-remote]').live('ajax:success', function(e, data, status, xhr){
      scroll_positions = {scrollX: $(window).scrollLeft(), scrollY: $(window).scrollTop()};
      replace_index_state(); // make sure the scrollstate is recorded
      push_edit_state($(this).attr("href"));
      load_edit_trip(data.form);
    });
    
    $("form.edit_trip").live('ajax:complete', function(e, data, status, xhr){
      var json = eval('(' + data.responseText + ')');
      if (json.form) {
        $("form.edit_trip").replaceWith(json.form);
        makeDialogs();
        makeDatePickers();
      } else  {
        push_index_state();
        load_index_trips(calendar_range.start * 1000);
      }
    })
    
    $("#trip_delete").live('ajax:success', function(e, data, status, xhr){
      push_index_state();
      load_index_trips(calendar_range.start * 1000);
    })
    
    $('#trip_pickup_time').live('change', function() {
      var date = ISODateFormatToDateObject( $(this).val() );
      var date_formatted = date.getFullYear() + "-" + (date.getMonth()+1) + "-" + date.getDate();
      $.getJSON("<%= for_date_runs_path %>", { date : date_formatted }, function(data){
        $("#trip_run_id option").remove();
        $("#trip_run_id").append( $("<option>") );
        $.each( data, function(i, run){
          var option = $("<option>").val(run.id).text(run.label);
          $("#trip_run_id").append( option );
        })
      })
    });

    function getFirstDayOfWeek() {
      var val = localStorage.getItem('firstDayOfWeek');
      val = parseInt(val);
      if (val >= 0 && val < 7) {
        return val;
      }
      // Default: Monday
      return 1;
    }

    function getDaysToShow() {
      var val = localStorage.getItem('daysToShow');
      val = parseInt(val);
      if (val > 0 && val <= 7) {
        return val;
      }
      // Default: 5
      return 5;
    }

    function refreshCalendar() {
      var vf = $('#vehicle_filter').remove();
      var ec = $('#expand_calendar').remove();
      $('#calendar').weekCalendar('setDaysToShow', getDaysToShow());
      vf.appendTo('div.wc-toolbar').show();
      ec.appendTo('div.wc-toolbar').show();
    }

    function initWeekdaySelect() {
      $('#weekday_select').buttonset();
      $("#weekday_select").hover($.noop, function() {
        $("#weekday_select_buttons").slideUp();
      });
      $("#weekday_select").click(function() {
        $("#weekday_select_buttons").slideDown();
      });
      buttons = $('#weekday_select input');
      for (var i = getFirstDayOfWeek();
           i < getFirstDayOfWeek() + getDaysToShow(); ++i) {
        $(buttons.get(i)).attr('checked', 'checked');
      }
      $('#weekday_select input').bind("click", updateWeekdays);
      $('#weekday_select').buttonset('refresh');
      refreshCalendar();
    }

    function updateWeekdays() {
      // Determine first and last days selected
      var buttons = $('#weekday_select input');
      var firstDayOfWeek = -1;
      var daysToShow = 0;
      for (var i = 0; i < 7; i++) {
        if ($(buttons.get(i)).attr('checked')) {
          if (firstDayOfWeek === -1) {
            firstDayOfWeek = i;
          }
          daysToShow = i - firstDayOfWeek + 1;
        }
      }
      // Nothign selected, restore M-F default
      if (firstDayOfWeek == -1) {
        firstDayOfWeek = 1;
        daysToShow = 5;
      }
      // Enforce consecutive selection rule
      for (var i = 0; i < 7; ++i) {
        if (i >= firstDayOfWeek && i < firstDayOfWeek + daysToShow) {
          $(buttons.get(i)).attr('checked', 'checked');
        } else {
          $(buttons.get(i)).removeAttr('checked');
        }
      }
      $('#weekday_select').buttonset('refresh');
      localStorage.setItem("firstDayOfWeek", firstDayOfWeek);
      localStorage.setItem("daysToShow", daysToShow);
      refreshCalendar();
    }

    initWeekdaySelect();

  });

</script>
