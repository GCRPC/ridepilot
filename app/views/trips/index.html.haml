= render 'shared/highlight_active_tab_js', is_primary_nav: true, tab_class: 'trips'
.clearfix.row#page-header
  %h1.page-title
    = translate_helper("trips")+ ": "
    %span.date-span
      = format_time_as_title_for_listing_day(@start_pickup_date) + " - " + format_time_as_title_for_listing_day(@end_pickup_date)
  .action-buttons
    - if can? :create, Trip
      = link_to translate_helper("new_trip_link_text"), new_trip_path, :class=>'btn action-button'
    - if can? :create, RepeatingTrip
      = link_to translate_helper("new_repeating_trip_text"), new_repeating_trip_path, :class=>'btn action-button'
    - if can? :index, RepeatingTrip
      = link_to translate_helper("repeating_trips"), repeating_trips_path, :class=>'btn action-button'
  .clearfix

.col-md-3{style: 'padding: 0px 15px 0px 0px;'}
  = render :partial => 'filters'
- unless can?(:edit, Trip)
  .col-md-9{style: 'padding: 0px;'}
    = render 'list'
- else
  .col-md-9{style: 'padding: 0px;'}
    .cancel-selected-trips.dropdown{style: 'margin-bottom: 5px;'}
      .table-action-buttons
        %button.btn.btn-primary.dropdown-toggle{type: 'button', data: {toggle: 'dropdown'}} 
          =translate_helper(:change_selected_trips_result)
          %span.caret
        %ul.dropdown-menu
          %li
            %a{href: '#', 'data-trip-result-id' => "" }
              No Result (Pending)
          -@trip_results.each do |tr|
            %li
              %a{href: '#', 'data-trip-result-id' => tr[1] }
                =tr[0]
        = link_to "Report", report_trips_path, class: 'btn action-button'
    = render 'list'

  = render 'trips/trip_result_reason_dialog'

  :javascript
    var cancel_codes = #{TripResult.client_code_verify_result_ids.to_json.html_safe};
    $(function() {
      // if customer has code, then need to verify the code first
      function handle_client_code_verification(customer_id, proceed_fn, abort_fn) {
        var callback_fn = function(data) {
          if (data.show_prompt) {
            verify_client_code(data.code, "#{verify_code_customer_path('xxx')}".replace('xxx', customer_id), function() {
              proceed_fn();
            }, abort_fn);
          } else {
            proceed_fn();
          }
        }
        if(customer_id) {
          var url = "#{prompt_code_customer_path('xxx')}".replace('xxx', customer_id);
          check_if_verify_client_code(url, callback_fn);
        } else {
          callback_fn({});
        }
      }

      // Initialize a helper object with the trip result reason modal, and a list of cancellation codes.
      var trh = new TripResultHelper(
        "#tripResultReasonDialog",
        #{TripResult.reason_needed_result_ids}
      );

      // One checkbox to rule them all
      $('.master-select-checkbox').change(function() {
        $('.trip-selected').prop('checked', $(this).prop('checked'));
      });
      
      var clearCheckboxes = function() {
        $('.master-select-checkbox').prop('checked', false).trigger('change');
      }

      // Handler for changing an individual trip result
      $('.trip_table_result_column select').change(function() {
        var resultCode = $(this).val();
        var form = $(this).closest('form');
        var resultReasonInput = form.find('input#trip_result_reason');
        var customer_id = $(this).closest('tr').data('customer-id');
        var _select = this;
        var callback_fn = function() {
          $(_select).data('result-id', resultCode);
          if(trh.isReasonNeeded(resultCode)) { // If result is a code that needs to ask for reason...
            trh.prepareModal(
              resultReasonInput.val(), // Set result reason input to current value
              true, // Show result reason input
              {
                confirm: function() { // update the result reason based on user input, and submit form
                  resultReasonInput.val(trh.modalInput.val());
                  form.submit();
                },
                skip: function() { // Just submit the form
                  form.submit();
                }
              }
            );
            trh.showModal();
          } else { // If result is NOT a cancel code...
            form.submit(); // ...just submit the form as-is.
          }
        };

        var abort_fn = function() {
          //aborting...
          $(_select).val($(_select).data('result-id'));
        };
        // check client code
        if(resultCode && cancel_codes.indexOf(parseInt(resultCode)) >= 0) {
          handle_client_code_verification(customer_id, callback_fn, abort_fn);
        } else {
          callback_fn();
        }
      });

      // Handler for changing multiple selected trip results
      $('.cancel-selected-trips a').click(function() {
        var checkedBoxes = $('.trip-selected:checked');
        if(checkedBoxes.length === 0) { return; } // Return if no trips are selected

        var tripRows = checkedBoxes.closest('tr.trip');
        var resultCode = $(this).data('trip-result-id');
        var resultSelectors = tripRows.find('.trip_table_result_column select');
        var forms = resultSelectors.closest('form');
        var resultReasonInputs = forms.find('input#trip_result_reason');

        var callback_fn = function() {
          if(trh.isReasonNeeded(resultCode)) { // If result is a code that needs to ask for reason...
            trh.prepareModal(
              "", // Set result reason input to blank
              true, // Show result reason input
              { // Prepare modal responses:
                confirm: function() { // update the results and result reason and submit form
                  resultSelectors.val(resultCode);
                  resultSelectors.data('result-id', resultCode);
                  resultReasonInputs.val(trh.modalInput.val());
                  forms.submit();
                  clearCheckboxes();
                },
                skip: function() { // just update results and submit the form
                  resultSelectors.val(resultCode);
                  resultSelectors.data('result-id', resultCode);
                  forms.submit();
                  clearCheckboxes();
                },
                cancel: function() { // don't update results or submit form
                  return;
                }
              }
            )
          } else { // If result is NOT a cancel code...
            trh.prepareModal(
              "", // Set result reason input to blank
              false, // Don't show result reason input
              { // Prepare modal responses:
                confirm: function() {
                  resultSelectors.val(resultCode);
                  resultSelectors.data('result-id', resultCode);
                  forms.submit();
                  clearCheckboxes();
                },
                cancel: function() {
                  return;
                }
              }
            )
          }

          trh.showModal();
        };

        // only process 1 customer
        var customer_ids = [];
        tripRows.each(function() {
          customer_ids.push($(this).data('customer-id'));
        });
        
        if(cancel_codes.indexOf(resultCode) >= 0 && $.unique(customer_ids).length == 1 ) { // canceling a trip
          handle_client_code_verification(customer_ids[0], callback_fn);
        } else {
          callback_fn();
        }
        
      });

    });
